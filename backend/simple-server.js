const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors());
app.use(express.json());

// Serve static files
app.use(express.static(path.join(__dirname, '../')));

// Health check endpoint
app.get('/health', (req, res) => {
  res.json({
    success: true,
    message: 'Video Proctoring System API is running',
    timestamp: new Date().toISOString(),
    version: '1.0.0'
  });
});

// Mock API endpoints for testing
app.post('/api/auth/login', (req, res) => {
  res.json({
    success: true,
    message: 'Login successful',
    data: {
      user: {
        id: 1,
        username: 'demo_user',
        email: 'demo@example.com',
        role: 'interviewer'
      },
      token: 'demo_token_123'
    }
  });
});

app.post('/api/auth/register', (req, res) => {
  res.json({
    success: true,
    message: 'Registration successful',
    data: {
      user: {
        id: 1,
        username: req.body.username || 'demo_user',
        email: req.body.email || 'demo@example.com',
        role: req.body.role || 'interviewer'
      },
      token: 'demo_token_123'
    }
  });
});

app.get('/api/auth/profile', (req, res) => {
  res.json({
    success: true,
    data: {
      user: {
        id: 1,
        username: 'demo_user',
        email: 'demo@example.com',
        role: 'interviewer',
        createdAt: new Date().toISOString()
      }
    }
  });
});

app.post('/api/interviews/start', (req, res) => {
  res.json({
    success: true,
    message: 'Interview started successfully',
    data: {
      interview: {
        id: 1,
        candidateName: req.body.candidateName || 'Demo Candidate',
        candidateEmail: req.body.candidateEmail || 'candidate@example.com',
        startTime: new Date().toISOString(),
        status: 'active'
      }
    }
  });
});

app.post('/api/logs', (req, res) => {
  console.log('Event logged:', req.body);
  res.json({
    success: true,
    message: 'Event logged successfully',
    data: { eventLog: req.body }
  });
});

// WhatsApp integration endpoint
app.post('/api/whatsapp/send', (req, res) => {
  try {
    const { candidateName, integrityScore, duration, eventCount, focusLostCount, suspiciousEventsCount } = req.body;
    
    const phoneNumber = '918986010809';
    const message = `🎯 *ProctorAI Interview Report*

👤 *Candidate:* ${candidateName || 'Demo Candidate'}
📧 *Email:* demo@example.com
⏱️ *Duration:* ${Math.floor(duration / 60) || 0}m ${duration % 60 || 0}s
📅 *Completed:* ${new Date().toLocaleString()}

📊 *INTEGRITY SCORE: ${integrityScore || 85}/100*

${(integrityScore || 85) >= 90 ? '✅ EXCELLENT - No violations detected' : ''}
${(integrityScore || 85) >= 70 ? '⚠️ GOOD - Minor issues detected' : ''}
${(integrityScore || 85) >= 50 ? '🔶 FAIR - Multiple violations' : '❌ POOR - Significant concerns'}

📈 *Event Summary:*
• Total Events: ${eventCount || 0}
• Focus Lost: ${focusLostCount || 0}
• Suspicious Activities: ${suspiciousEventsCount || 0}

💡 *Recommendation:* ${(integrityScore || 85) >= 70 ? 'Standard review recommended' : 'Manual review required'}

---
🤖 Generated by ProctorAI System
⏰ ${new Date().toLocaleString()}`;

    const whatsappUrl = `https://web.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(message)}`;
    
    console.log('WhatsApp URL generated:', whatsappUrl);
    
    res.json({
      success: true,
      message: 'WhatsApp URL generated successfully',
      data: {
        whatsappUrl: whatsappUrl,
        message: message,
        phoneNumber: phoneNumber,
        instructions: 'Click the URL to open WhatsApp and send the message'
      }
    });
  } catch (error) {
    console.error('Error generating WhatsApp URL:', error);
    res.status(500).json({
      success: false,
      message: 'Failed to generate WhatsApp URL',
      error: error.message
    });
  }
});

// Test WhatsApp endpoint
app.get('/api/whatsapp/test', (req, res) => {
  const phoneNumber = '918986010809';
  const message = '🎯 *ProctorAI Test Message*\n\nThis is a test message from ProctorAI system!\n\n✅ Backend is working correctly\n📅 Time: ' + new Date().toLocaleString();
  const whatsappUrl = `https://web.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(message)}`;
  
  res.json({
    success: true,
    message: 'WhatsApp test URL generated',
    data: {
      whatsappUrl: whatsappUrl,
      message: message,
      instructions: 'Click the URL to test WhatsApp integration'
    }
  });
});

// Serve the test HTML file
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, '../test.html'));
});

// Start server
app.listen(PORT, () => {
  console.log(`🚀 Server running on port ${PORT}`);
  console.log(`📊 Health check: http://localhost:${PORT}/health`);
  console.log(`🌐 Test page: http://localhost:${PORT}/`);
  console.log(`🔗 API Base URL: http://localhost:${PORT}/api`);
});

module.exports = app;
