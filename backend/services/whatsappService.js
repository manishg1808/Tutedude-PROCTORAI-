class WhatsAppService {
  constructor() {
    this.phoneNumber = '918986010809'; // Your WhatsApp number with country code
  }

  async sendInterviewReport(interviewData) {
    try {
      const message = this.formatInterviewMessage(interviewData);
      
      // Create WhatsApp Web URL that opens directly
      const whatsappUrl = `https://web.whatsapp.com/send?phone=${this.phoneNumber}&text=${encodeURIComponent(message)}`;
      
      console.log('WhatsApp URL generated:', whatsappUrl);
      console.log('Message to send:', message);
      
      return {
        success: true,
        whatsappUrl: whatsappUrl,
        message: message,
        instructions: 'Click the link to open WhatsApp and send the message'
      };
    } catch (error) {
      console.error('Error creating WhatsApp message:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }

  formatInterviewMessage(interviewData) {
    const {
      candidateName,
      candidateEmail,
      integrityScore,
      duration,
      totalEvents,
      focusLostCount,
      suspiciousEventsCount,
      endTime
    } = interviewData;

    const status = integrityScore >= 90 ? '✅ EXCELLENT' : 
                  integrityScore >= 70 ? '⚠️ GOOD' : 
                  integrityScore >= 50 ? '🔶 FAIR' : '❌ POOR';

    return `🎯 *ProctorAI Interview Report*

👤 *Candidate:* ${candidateName}
📧 *Email:* ${candidateEmail}
⏱️ *Duration:* ${Math.floor(duration / 60)}m ${duration % 60}s
📅 *Completed:* ${new Date(endTime).toLocaleString()}

📊 *INTEGRITY SCORE: ${integrityScore}/100* ${status}

📈 *Event Summary:*
• Total Events: ${totalEvents}
• Focus Lost: ${focusLostCount}
• Suspicious Activities: ${suspiciousEventsCount}

🔍 *Detailed Analysis:*
${integrityScore >= 90 ? '• No significant violations detected' : ''}
${focusLostCount > 0 ? `• Focus lost ${focusLostCount} times` : ''}
${suspiciousEventsCount > 0 ? `• ${suspiciousEventsCount} suspicious activities flagged` : ''}

💡 *Recommendation:* ${this.getRecommendation(integrityScore)}

---
🤖 Generated by ProctorAI System
⏰ ${new Date().toLocaleString()}`;
  }

  getRecommendation(score) {
    if (score >= 90) {
      return 'Candidate performed excellently. No concerns detected.';
    } else if (score >= 70) {
      return 'Good performance with minor issues. Standard review recommended.';
    } else if (score >= 50) {
      return 'Multiple violations detected. Manual review required.';
    } else {
      return 'Significant integrity concerns. Immediate review and follow-up needed.';
    }
  }

  // Alternative method using WhatsApp Business API
  async sendViaAPI(message) {
    // This would require WhatsApp Business API credentials
    // For now, we'll just log the message
    console.log('WhatsApp API Message:', message);
    
    // Example with Twilio WhatsApp API:
    /*
    const client = require('twilio')(accountSid, authToken);
    
    await client.messages.create({
      from: 'whatsapp:+14155238886',
      body: message,
      to: `whatsapp:+${this.phoneNumber}`
    });
    */
  }

  // Send real-time alerts during interview
  async sendAlert(alertData) {
    const { eventType, description, severity, timestamp } = alertData;
    
    const alertMessage = `🚨 *ProctorAI Alert*

⚠️ *Event:* ${eventType.replace('_', ' ').toUpperCase()}
📝 *Description:* ${description}
🔴 *Severity:* ${severity.toUpperCase()}
⏰ *Time:* ${new Date(timestamp).toLocaleString()}

${severity === 'critical' ? '🔴 IMMEDIATE ATTENTION REQUIRED' : ''}
${severity === 'high' ? '🟡 HIGH PRIORITY ALERT' : ''}
${severity === 'medium' ? '🟠 MEDIUM PRIORITY' : ''}

---
🤖 ProctorAI Real-time Monitoring`;

    try {
      const whatsappUrl = `${this.apiUrl}?phone=${this.phoneNumber}&text=${encodeURIComponent(alertMessage)}`;
      
      console.log('Alert WhatsApp URL:', whatsappUrl);
      
      return {
        success: true,
        whatsappUrl: whatsappUrl,
        message: alertMessage
      };
    } catch (error) {
      console.error('Error sending alert:', error);
      return {
        success: false,
        error: error.message
      };
    }
  }
}

module.exports = new WhatsAppService();
